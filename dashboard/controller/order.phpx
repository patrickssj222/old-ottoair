<?php
class ControllerOrder extends DashboardController {

    // Autoload
    public function __construct($registry = array()) {
        parent::__construct($registry);
        // Load model
        $this->load->model('order');
        // Load language
        $this->load->language('order');
    }

    public function index() {
        $this->get_list();
    }

    public function get_list() {
        $data['breadcrumb'] = array(
            $this->language['text_dashboard'] =>  HTTP_SERVER,
            $this->language['heading_title'] =>  HTTP_SERVER . 'order/',
        );

        $data['heading_title'] = $this->language['heading_title'];
        $data['page_name'] = $this->language['heading_title'];

        $data['url_create'] = HTTP_SERVER . 'order/form';
        $data['url_setup_store'] = HTTP_SERVER . 'order/get_items';

        $data['orders'] = array();

        foreach ($this->model_order->listOrdersByUserId($this->user['user_id']) as $order) {
            $order['items'] = $this->model_order->getOrderItems($order['order_id']);
            $order['tracking'] = $this->model_order->getOrderTrackings($order['order_id'])[0];
            $order['url_detail'] = HTTP_SERVER . 'order/detail/' . $order['order_id'];
            $order['url_detail_pay'] = $order['url_detail'] . '/pay';
            $data['orders'][] = $order;
        }

        $data['head'] = '
            <link href="' . HTTP_SERVER . 'assets/plugins/jquery-datatable/media/css/dataTables.bootstrap.min.css" rel="stylesheet" type="text/css" />
            <link href="' . HTTP_SERVER . 'assets/plugins/jquery-datatable/extensions/FixedColumns/css/dataTables.fixedColumns.min.css" rel="stylesheet" type="text/css" />
            <link href="' . HTTP_SERVER . 'assets/plugins/datatables-responsive/css/datatables.responsive.css" rel="stylesheet" type="text/css" media="screen" />
            <script src="https://www.paypalobjects.com/api/checkout.js"></script>
        ';

        $data['foot'] = '
            <script src="' . HTTP_SERVER . 'assets/plugins/jquery-datatable/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/jquery-datatable/extensions/TableTools/js/dataTables.tableTools.min.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/jquery-datatable/media/js/dataTables.bootstrap.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/jquery-datatable/extensions/Bootstrap/jquery-datatable-bootstrap.js" type="text/javascript"></script>
            <script type="text/javascript" src="' . HTTP_SERVER . 'assets/plugins/datatables-responsive/js/datatables.responsive.js"></script>
            <script type="text/javascript" src="' . HTTP_SERVER . 'assets/plugins/datatables-responsive/js/lodash.min.js"></script>
            <script src="' . HTTP_SERVER . 'assets/js/tables.js" type="text/javascript"></script>
        ';

        // Render but capture output
        $data['sidebar'] = $this->load->controller('common/sidebar')->render(CAPTURE_RESULT, $data);
        $data['wrapper_top'] = $this->load->controller('common/wrapper_top')->render(CAPTURE_RESULT, $data);
        $data['wrapper_bottom'] = $this->load->controller('common/wrapper_bottom')->render(CAPTURE_RESULT, $data);

        // Render and stream
        $b = $this->load->view('order/list', $data);
    }

    public function form() {
        $data['breadcrumb'] = array(
            $this->language['text_dashboard'] =>  HTTP_SERVER,
            $this->language['heading_title'] =>  HTTP_SERVER . 'order/',
            $this->language['heading_form'] =>  HTTP_SERVER . 'order/form/',
        );

        $data['heading_title'] = $this->language['heading_form'];
        $data['page_name'] = $this->language['heading_form'];

        $data['url_order_list'] = HTTP_SERVER . 'order';
        $data['url_submit'] = HTTP_SERVER . 'order/submit_form';
        $data['url_item_info'] = HTTP_SERVER . 'order/item_info';
        $data['url_get_item'] = HTTP_SERVER . 'order/get_item';
        $data['url_get_addresses'] = HTTP_SERVER  . 'order/get_addresses/' . $this->user['user_id'];

        $data['user'] = $this->user;

        $data['head'] = '
            <link href="' . HTTP_SERVER . 'assets/plugins/bootstrap-datepicker/css/datepicker3.css" rel="stylesheet" type="text/css" media="screen">
            <link href="' . HTTP_SERVER . 'assets/plugins/bootstrap-timepicker/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" media="screen">
        ';
        $data['foot'] = '
            <script src="' . HTTP_SERVER . 'assets/plugins/bootstrap3-wysihtml5/bootstrap3-wysihtml5.all.min.js"></script>
            <script type="text/javascript" src="' . HTTP_SERVER . 'assets/plugins/jquery-autonumeric/autoNumeric.js"></script>
            <script type="text/javascript" src="' . HTTP_SERVER . 'assets/plugins/dropzone/dropzone.min.js"></script>
            <script type="text/javascript" src="' . HTTP_SERVER . 'assets/plugins/bootstrap-tag/bootstrap-tagsinput.min.js"></script>
            <script type="text/javascript" src="' . HTTP_SERVER . 'assets/plugins/jquery-inputmask/jquery.inputmask.min.js"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/bootstrap-form-wizard/js/jquery.bootstrap.wizard.min.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/jquery-validation/js/jquery.validate.min.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/summernote/js/summernote.min.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/moment/moment.min.js"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/bootstrap-daterangepicker/daterangepicker.js"></script>
            <script src="' . HTTP_SERVER . 'assets/plugins/bootstrap-timepicker/bootstrap-timepicker.min.js"></script>
            <script src="' . HTTP_SERVER . 'assets/js/form_wizard.js" type="text/javascript"></script>
            <script src="' . HTTP_SERVER . 'assets/js/form_elements.js" type="text/javascript"></script>
        ';

        // Render but capture output
        $data['sidebar'] = $this->load->controller('common/sidebar')->render(CAPTURE_RESULT, $data);
        $data['wrapper_top'] = $this->load->controller('common/wrapper_top')->render(CAPTURE_RESULT, $data);
        $data['wrapper_bottom'] = $this->load->controller('common/wrapper_bottom')->render(CAPTURE_RESULT, $data);

        // Render and stream
        $this->load->view('order/form', $data);
    }

    public function submit_form() {

        if($_SERVER["REQUEST_METHOD"] == "POST") {
            // We are supposed to do form validation right here but I am gonna skip

            $data = $_POST;

            $data['user_id'] = $this->user['user_id'];

            $json = $this->model_order->createOrder($data, CAPTURE_RESULT);
            if ($json['success']) {
                $json['redirect'] = HTTP_SERVER . 'order/detail/' . $json['order_id'];
            }
            exit(json_encode($json));
        } else {
            exit(json_encode(array('success' => false, 'message' => $this->language['error_server'])));
        }
    }

    public function detail($order_id = false, $open_payment_modal = false) {
        if (!is_numeric($order_id)) {
            $this->redirect(HTTP_SERVER . '404');
        }

        $data['order'] = $this->model_order->getOrder($order_id);
        if (!$data['order']) {
            $this->redirect(HTTP_SERVER . '404');
        }

        $data['heading_title'] = sprintf($this->language['heading_detail'], str_pad($order_id, 4, '0', STR_PAD_LEFT));
        $data['page_name'] = $data['heading_title'];

        $data['breadcrumb'] = array(
            $this->language['text_dashboard'] =>  HTTP_SERVER,
            $this->language['heading_title'] =>  HTTP_SERVER . 'order/',
            $data['heading_title'] =>  HTTP_SERVER . 'order/detail/',
        );

        $data['items']   = $this->model_order->getorderItems($order_id);
        $data['trackings'] = $this->model_order->getorderTrackings($order_id);
        $data['balance'] = (float)$data['order']['total_with_tax'] - (float)$data['order']['payment'];
        $data['url_orders'] = HTTP_SERVER . 'order';
        $data['url_payment'] = HTTP_SERVER . 'order/payment/' . $order_id . '/';
        $data['open_payment_modal'] = $open_payment_modal === 'pay';
        $data['url_payment_success'] = HTTP_SERVER . 'order/payment_success/' . $order_id;

        // Render but capture output
        $data['sidebar'] = $this->load->controller('common/sidebar')->render(CAPTURE_RESULT, $data);
        $data['wrapper_top'] = $this->load->controller('common/wrapper_top')->render(CAPTURE_RESULT, $data);
        $data['wrapper_bottom'] = $this->load->controller('common/wrapper_bottom')->render(CAPTURE_RESULT, $data);

        // Render and stream
        $this->load->view('order/detail', $data);
    }

    public function item_info($url_param = '') {
        if (!empty($url_param)) {
            $url = $url_param;
        } else if (!empty($_POST['item_url'])) {
            $url = $_POST['item_url'];
        } else return false;

        $json = array('item_url' => $url);

        // Scan for matching item info plugin and hand over the url
        foreach (scandir(DIR_APPLICATION . 'plugin/item_info/') as $f) {
            // It must be a php script
            if (preg_match('/\.php$/i', $f)) {
                $f = str_replace('.php', '', $f);
                if (strpos($url, $f) !== false) {

                    // Expecting an array containing item_name,
                    // item_description, item_value and/or more
                    $data = $this->load->plugin('item_info/'.$f)->index($url);
                    if (gettype($data) === 'array') {
                        $json = array_merge($json, $data);
                    }
                    break;
                }
            }
        }

        if (empty($url_param)) {
            echo json_encode($json);
        } else {
            return json_encode($json);
        }
    }

    public function payment($order_id, $amount = 0) {
        $this->model_order->orderPayment($order_id, $amount);
        $this->redirect(HTTP_SERVER . 'order/detail/' . $order_id);
    }

    public function get_item() {
        $item_id = $_POST['id'];
        exit(json_encode(array('success' => true, 'data' => $this->model_order->getItem($item_id))));
    }

    public function get_items() {
        exit(json_encode(array('success' => true, 'data' => $this->model_order->getStore())));
    }

    public function get_addresses($user_id) {
      $addresses = $this->model_user->getUserAddress($user_id);
      $sender = [];
      $receiver = [];
      foreach ($addresses as $address) {
        if ($address['type'] == 1) {
        $sender[] = $address;
        }else $receiver[] = $address;
      }

      if (!empty($addresses)){
        exit(json_encode(array('success' => true, 'data1' => $sender, 'data2' => $receiver)));
      } else exit(json_encode(array('success' => false)));
    }

    public function payment_success($order_id) {
      return $this->model_order->paymentSuccess($order_id);
    }
}
